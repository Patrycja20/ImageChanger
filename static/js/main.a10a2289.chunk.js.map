{"version":3,"sources":["reducers/index.js","reducers/contacts.js","store.js","components/EditionImage.js","components/Coloring.js","components/Main.js","components/App.js","actions/index.js","components/Root.js","index.js"],"names":["combineReducers","contacts","state","arguments","length","undefined","action","type","Object","toConsumableArray","store","createStore","reducers","EditionImage","react_default","a","createElement","Component","Coloring","Main","App","Link","to","Route","path","exact","strict","component","mapDispatchToProps","contactsFetched","withRouter","connect","Root","es","BrowserRouter","basename","process","components_App","ReactDOM","render","components_Root","document","getElementById"],"mappings":"iMAGeA,cAAgB,CAC7BC,SCJsB,WAAwB,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAQC,EAAOC,MACb,IAAK,yBACH,OAAOC,OAAAC,EAAA,EAAAD,CACFF,EAAOL,UAEd,QACE,OAAOC,MCFAQ,SAAQC,YAAYC,+DCGlBC,mLAJX,OAAOC,EAAAC,EAAAC,cAAA,6BAFgBC,aCMZC,mLAJX,OAAOJ,EAAAC,EAAAC,cAAA,iCAFYC,aCMRE,mLAJX,OAAOL,EAAAC,EAAAC,cAAA,yBAFQC,aCMbG,mLAEF,OACEN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,KAAT,QAAwBR,EAAAC,EAAAC,cAAA,WACxBF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,aAAT,YAAoCR,EAAAC,EAAAC,cAAA,WACpCF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,iBAAT,WAAuCR,EAAAC,EAAAC,cAAA,WACvCF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,QAAM,EAACC,UAAWR,IACxCL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOC,KAAK,YAAYG,UAAWT,IACnCJ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOC,KAAK,gBAAgBG,UAAWd,YAX7BI,aAuBZW,EAAqB,CAACC,gBC/BG,SAAC5B,GAAD,MAAe,CAC5CM,KAAM,yBACNN,cD+Ba6B,cAAWC,YAPF,SAAC7B,GACvB,MAAO,CACLD,SAAUC,EAAMD,WAK+B2B,EAAzBG,CAA6CX,YEpBxDY,EAPF,kBACXlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAUvB,MAAOA,GACfI,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQC,SAAUC,iBAChBtB,EAAAC,EAAAC,cAACqB,EAAD,SCLNC,IAASC,OAAOzB,EAAAC,EAAAC,cAACwB,EAAD,MAAUC,SAASC,eAAe","file":"static/js/main.a10a2289.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport { contacts } from \"./contacts\";\r\n\r\nexport default combineReducers({\r\n  contacts\r\n});\r\n","export const contacts = (state = [], action) => { // (1)\r\n  switch (action.type) { // (2)\r\n    case 'FETCH_CONTACTS_SUCCESS':\r\n      return [\r\n        ...action.contacts\r\n      ]\r\n    default:\r\n      return state\r\n  }\r\n}","import { createStore } from 'redux';\r\nimport reducers from './reducers/index';\r\nimport createHistory from 'history/createBrowserHistory';\r\n\r\n\r\nexport const store = createStore(reducers);\r\n","import React,{ Component } from 'react';\r\n\r\nclass EditionImage extends Component {\r\n  render() {\r\n    return <div>edition</div>\r\n  }\r\n}\r\n\r\nexport default EditionImage;","import React,{Component} from 'react';\r\n\r\nclass Coloring extends Component {\r\n  render() {\r\n    return <div>coloringgg </div>\r\n  }\r\n}\r\n\r\nexport default Coloring;","import React,{ Component } from 'react';\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return <div>hej</div>\r\n  }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { contactsFetched } from '../actions/index';\nimport {withRouter, Route, Link } from 'react-router-dom'\nimport EditionImage from './EditionImage';\nimport Coloring from './Coloring';\nimport Main from './Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Link to=\"/\">Main</Link><br/>\n        <Link to=\"/Coloring\">coloring</Link><br/>\n        <Link to=\"/EditionImage\">edition</Link><br/>\n        <br/>\n        \n        <Route path=\"/\" exact strict component={Main}/>\n        <Route path=\"/Coloring\" component={Coloring}/>\n        <Route path=\"/EditionImage\" component={EditionImage}/>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: state.contacts // (1)\n  }\n};\nconst mapDispatchToProps = {contactsFetched}; // (2)\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App)); // (3\n\n","export const contactsFetched = (contacts) => ({\r\n  type: 'FETCH_CONTACTS_SUCCESS',\r\n  contacts\r\n});\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from '../store';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nconst Root = () =>\r\n  <Provider store={store}>\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <App/>\r\n    </Router>\r\n  </Provider>;\r\n\r\nexport default Root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './components/Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}